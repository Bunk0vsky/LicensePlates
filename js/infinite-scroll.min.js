var cardLimit,
  currentPage = 1,
  pageDisplay = 20;
const infiniteSCroll = async (e) => {
    const t = document.getElementById("card-count"),
      n = document.getElementById("card-total"),
      a = document.querySelector(".card-actions");
    let o = document.getElementById("scroll-loader");
    cardLimit = e;
    const i = pageDisplay,
      c = Math.ceil(cardLimit / i);
    let r;
    n.innerHTML = cardLimit;
    const s = async (e) => {
        const n = e === c ? cardLimit : e * i;
        if (((t.innerHTML = n), e > 1 && e <= c)) {
          const t = await displayMore();
          translation(), 0 === t.list.length ? d() : (currentPage = e);
        }
        e === c && d();
      },
      l = (e) => {
        var t, n;
        (t = () => {
          const e = a.getBoundingClientRect().top < window.innerHeight,
            t = Math.ceil(cardLimit / i);
          e &&
            currentPage < t &&
            ((platesStartRange += pageDisplay),
            (platesEndRange += pageDisplay),
            s(currentPage + 1)),
            currentPage === t && d();
        }),
          (n = 1e3),
          r ||
            ((r = !0),
            setTimeout(() => {
              t(), (r = !1);
            }, n));
      },
      d = () => {
        o?.remove(), window.removeEventListener("scroll", l);
      };
    window.addEventListener("scroll", l), await s(currentPage);
  },
  shopActions = async () => {
    let e = new URLSearchParams(url.search);
    const t = e?.get("country"),
      n = e?.get("state"),
      a = e?.get("year"),
      o = decodeURIComponent(t),
      i = n ? decodeURIComponent(n) : null,
      c = a ? decodeURIComponent(a) : null,
      r = await displayMore(o, i, c);
    translation(), infiniteSCroll(r?.count || 0), getStates();
  };
"#sklep" === window.location.hash && shopActions(),
  window.addEventListener("load", async (e) => {
    "#sklep" === e.currentTarget.location.hash && (await shopActions());
  });
